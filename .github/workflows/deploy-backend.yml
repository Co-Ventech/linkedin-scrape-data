name: Deploy Backend to EC2

on:
  push:
    branches: [main]

jobs:
  deploy-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Verify secrets exist before using them
      - name: Validate Secrets
        run: |
          if [ -z "${{ secrets.SSH_PRIVATE_KEY }}" ]; then
            echo "::error::SSH_PRIVATE_KEY secret is missing or empty"
            exit 1
          fi
          echo "Secrets validation passed"

      # Key fix: Using correct secret names (SSH_PRIVATE_KEY instead of EC2_SSH_KEY)
      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: ${{ secrets.SSH_HOST }}
          config: |
            Host ${{ secrets.SSH_HOST }}
              StrictHostKeyChecking no
              UserKnownHostsFile=/dev/null

      # Debugging step to verify key
      - name: Verify SSH Connection
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > key.pem
          chmod 400 key.pem
          echo "Testing connection to: ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}"
          ssh -i key.pem -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "echo 'SSH connection successful!'"

      - name: Deploy & Monitor Backend
        run: |
          ssh -i key.pem ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
            set -euo pipefail

            # System info
            echo "=== ENVIRONMENT ==="
            echo "User: $(whoami)"
            echo "Node: $(node --version)"
            echo "NPM: $(npm --version)"
            echo "PM2: $(pm2 --version || echo 'Not installed')"

            # Directory validation
            echo "=== VALIDATING PATHS ==="
            BACKEND_DIR="$HOME/backend/linkedin-scrape-data"
            [ ! -d "$BACKEND_DIR" ] && { echo "::error::Backend directory missing"; ls -la ~/backend; exit 1; }

            # Deployment
            cd "$BACKEND_DIR"
            echo "=== UPDATING CODE ==="
            git fetch origin
            git reset --hard origin/main

            echo "=== INSTALLING DEPENDENCIES ==="
            npm ci --omit=dev
            [ -f requirements.txt ] && pip install -r requirements.txt

            echo "=== PROCESS MANAGEMENT ==="
            if ! command -v pm2 >/dev/null; then
              npm install -g pm2
              pm2 startup
            fi

            pm2 restart backend || pm2 start server.js --name backend
            pm2 save

            echo "=== FINAL STATUS ==="
            pm2 list
            echo "Last logs:"
            pm2 logs backend --lines 20 --nostream
          EOF
